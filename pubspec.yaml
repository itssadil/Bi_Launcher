name: bi_launcher
description: BI Launcher is an Android TV launcher that is designed to provide users with a user-friendly interface and quick access to their favorite content, including movies, shows, apps, and games. This launcher is designed to be easy to use and intuitive, making it ideal for users who want to quickly and easily find the content they want to watch or play.  BI Launcher features a clean and modern interface that is easy to navigate. The launcher is organized into different categories, making it easy to find the content you are looking for. For example, the launcher has a section for movies, a section for TV shows, a section for apps, and a section for games. Each section is further subdivided into different categories, such as "popular movies" or "new releases."  One of the key features of BI Launcher is its quick access feature. This feature allows users to quickly access their favorite content by creating shortcuts on the launcher's home screen. For example, if you frequently watch a particular TV show, you can create a shortcut for that show on the home screen. This allows you to quickly access the show with just a few clicks.  Another great feature of BI Launcher is its customization options. Users can customize the launcher's home screen by adding or removing shortcuts, changing the background image, and adjusting the layout. This allows users to tailor the launcher to their preferences and make it their own.  Overall, BI Launcher is a great option for anyone looking for an easy-to-use Android TV launcher that provides quick access to their favorite content. With its user-friendly interface and customization options, it is sure to be a hit with users who want a simple and intuitive way to access their favorite shows, movies, apps, and games.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.19.3 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  device_apps: ^2.2.0
  rive: ^0.10.3
  http: ^0.13.5
  video_player: ^2.6.1
  chewie: ^1.4.0
  provider: ^6.0.5
  shared_preferences: ^2.1.0
  url_launcher: ^6.1.11

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/bi/
    - assets/images/wallpapers/
    - assets/rive/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
